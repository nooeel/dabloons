function loop() {
    window.requestAnimationFrame(loop)
    render()
    moving()
    texting()
}
loop();



function texting() {
    testText.write()
}



function rectengularCollision({rectangle1, rectangle2}) {
    return( 
        rectangle1.position.x + rectangle1.width * rectangle1.size  >= rectangle2.position.x                            &&
        rectangle1.position.x                                       <= rectangle2.position.x + rectangle2.width        &&
        rectangle1.position.y + rectangle1.height * rectangle1.size >= rectangle2.position.y                            &&    
        rectangle1.position.y                                       <= rectangle2.position.y + rectangle2.height
    )
}



function render() {
    townOneBg.draw()

    renderTiles()


    player.draw()
    fgTownOne.draw()  
}


function renderTiles() {
    boundaries.forEach(boundary => {
        boundary.draw()
    })   

    doors.forEach(door => {
        door.draw()
    })
}



function moving() {

    if (keys.e.pressed && onDoor === true) {
        console.log("door");
    }

    if (keys.w.pressed || keys.a.pressed || keys.s.pressed || keys.d.pressed) {
        for (let i = 0; i < doors.length; i++) {
            const door = doors[i]
            if (
                rectengularCollision({
                    rectangle1: player,
                    rectangle2: {
                        ...door,
                        position: {
                            x: door.position.x,
                            y: door.position.y 
                        }
                    }
                })
            ) {
                onDoor = true
                break
            }
        }
    }



    const playerStep = 3
    let moving = true
    player.moving = false


    if (keys.w.pressed && lastKey === 'w') {
        player.moving = true
        player.image = player.sprites.up

        for (let i = 0; i < boundaries.length; i++) {
            const boundary = boundaries[i]
            if (
                rectengularCollision({
                    rectangle1: player,
                    rectangle2: {
                        ...boundary, 
                        position: {
                            x: boundary.position.x,
                            y: boundary.position.y + playerStep
                        }
                    }
                })
            ) {
                moving = false
                break
            }
        }

        if (moving) movables.forEach(movable => {movable.position.y += playerStep}) 
    }    


    
    else if (keys.a.pressed && lastKey === 'a') {
        player.moving = true
        player.image = player.sprites.left

        for (let i = 0; i < boundaries.length; i++) {
            const boundary = boundaries[i]
            if (
                rectengularCollision({
                    rectangle1: player,
                    rectangle2: {...boundary, position: {
                        x: boundary.position.x + playerStep,
                        y: boundary.position.y 
                    }}
                })
            ) {
                moving = false
                break
            }
        }

        if (moving) movables.forEach(movable => {movable.position.x += playerStep})
    }



    else if (keys.s.pressed && lastKey === 's') {
        player.moving = true
        player.image = player.sprites.down

        for (let i = 0; i < boundaries.length; i++) {
            const boundary = boundaries[i]
            if (
                rectengularCollision({
                    rectangle1: player,
                    rectangle2: {...boundary, position: {
                        x: boundary.position.x,
                        y: boundary.position.y - playerStep
                    }}
                })
            ) {
                moving = false
                break
            }
        }

        if (moving) movables.forEach(movable => {movable.position.y -= playerStep})
    }



    else if (keys.d.pressed && lastKey === 'd') {
        player.moving = true
        player.image = player.sprites.right

        for (let i = 0; i < boundaries.length; i++) {
            const boundary = boundaries[i]
            if (
                rectengularCollision({
                    rectangle1: player,
                    rectangle2: {...boundary, position: {
                        x: boundary.position.x - playerStep,
                        y: boundary.position.y 
                    }}
                })
            ) {
                moving = false
                break
            }
        }

        if (moving) movables.forEach(movable => {movable.position.x -= playerStep})
    }
}